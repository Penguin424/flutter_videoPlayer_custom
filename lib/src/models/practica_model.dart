///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class PracticaModelAlumnos {
/*
{
  "id": 14,
  "username": "DIAZ HUERTA ELVIA ALEJANDRA",
  "email": "elvia.huerta@cosbiome.com",
  "provider": "local",
  "confirmed": true,
  "blocked": false,
  "role": 3,
  "created_at": "2021-11-08T18:02:08.000Z",
  "updated_at": "2022-06-21T14:50:45.000Z",
  "UsuarioFoto": "no",
  "AlumnoApellidoPaterno": "DIAZ",
  "AlumnoApellidoMaterno": "HUERTA",
  "AlumnoNombres": "ELVIA ALEJANDRA",
  "AlumnoFechaNacimiento": "11/04/1988",
  "AlumnoEstadoCivil": "Soltero",
  "AlumnoSexo": "Femenino",
  "AlumnoLugarDeNacimiento": "Guadalajara jalisco",
  "AlumnoEdad": "33",
  "AlumnoEscuelaDeTransferencia": "UNIVERCIDAD",
  "AlumnoTipoDeSangre": "O-",
  "AlumnoTelefono": "3321349158",
  "AlumnoCelular": "3321349158",
  "AlumnoTelefonoDeEmergencia": "3328282452",
  "AlumnoDomicilio": "TUNJA S/N",
  "AlumnoCodiPostal": "45653",
  "AlumnoPais": "MEXICO",
  "AlumnoEstado": "JALISCO",
  "AlumnoMunicipio": "GUADALAJARA JALISCO",
  "AlumnoRfc": "*",
  "AlumnoCurp": "DIHE880411MJCZRL03",
  "AlumnoMensualidad": "2100",
  "AlumnoCodigo": "337009",
  "AlumnoPresencial": true,
  "AlumnoLinea": false,
  "AlumnoVendedor": "Abraham Cisneros",
  "AlumnoPagoStripe": "price_1JLWNBHfPPJjPocOCjCUI8YT",
  "AlumnoEgresado": false,
  "AlumnoPromedio": null,
  "AlumnoStatus": "ACTIVO",
  "alumnoEstatusEstudio": "CARRERA",
  "fechaMarcar": null,
  "calificacion": "PAGADO",
  "comentarios": null,
  "tokenpush": null,
  "sucursal": null,
  "practica": 1
} 
*/

  int? id;
  String? username;
  String? email;
  String? provider;
  bool? confirmed;
  bool? blocked;
  int? role;
  String? createdAt;
  String? updatedAt;
  String? UsuarioFoto;
  String? AlumnoApellidoPaterno;
  String? AlumnoApellidoMaterno;
  String? AlumnoNombres;
  String? AlumnoFechaNacimiento;
  String? AlumnoEstadoCivil;
  String? AlumnoSexo;
  String? AlumnoLugarDeNacimiento;
  String? AlumnoEdad;
  String? AlumnoEscuelaDeTransferencia;
  String? AlumnoTipoDeSangre;
  String? AlumnoTelefono;
  String? AlumnoCelular;
  String? AlumnoTelefonoDeEmergencia;
  String? AlumnoDomicilio;
  String? AlumnoCodiPostal;
  String? AlumnoPais;
  String? AlumnoEstado;
  String? AlumnoMunicipio;
  String? AlumnoRfc;
  String? AlumnoCurp;
  String? AlumnoMensualidad;
  String? AlumnoCodigo;
  bool? AlumnoPresencial;
  bool? AlumnoLinea;
  String? AlumnoVendedor;
  String? AlumnoPagoStripe;
  bool? AlumnoEgresado;
  String? AlumnoPromedio;
  String? AlumnoStatus;
  String? alumnoEstatusEstudio;
  String? fechaMarcar;
  String? calificacion;
  String? comentarios;
  String? tokenpush;
  String? sucursal;
  int? practica;

  PracticaModelAlumnos({
    this.id,
    this.username,
    this.email,
    this.provider,
    this.confirmed,
    this.blocked,
    this.role,
    this.createdAt,
    this.updatedAt,
    this.UsuarioFoto,
    this.AlumnoApellidoPaterno,
    this.AlumnoApellidoMaterno,
    this.AlumnoNombres,
    this.AlumnoFechaNacimiento,
    this.AlumnoEstadoCivil,
    this.AlumnoSexo,
    this.AlumnoLugarDeNacimiento,
    this.AlumnoEdad,
    this.AlumnoEscuelaDeTransferencia,
    this.AlumnoTipoDeSangre,
    this.AlumnoTelefono,
    this.AlumnoCelular,
    this.AlumnoTelefonoDeEmergencia,
    this.AlumnoDomicilio,
    this.AlumnoCodiPostal,
    this.AlumnoPais,
    this.AlumnoEstado,
    this.AlumnoMunicipio,
    this.AlumnoRfc,
    this.AlumnoCurp,
    this.AlumnoMensualidad,
    this.AlumnoCodigo,
    this.AlumnoPresencial,
    this.AlumnoLinea,
    this.AlumnoVendedor,
    this.AlumnoPagoStripe,
    this.AlumnoEgresado,
    this.AlumnoPromedio,
    this.AlumnoStatus,
    this.alumnoEstatusEstudio,
    this.fechaMarcar,
    this.calificacion,
    this.comentarios,
    this.tokenpush,
    this.sucursal,
    this.practica,
  });
  PracticaModelAlumnos.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    username = json['username']?.toString();
    email = json['email']?.toString();
    provider = json['provider']?.toString();
    confirmed = json['confirmed'];
    blocked = json['blocked'];
    role = json['role']?.toInt();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    UsuarioFoto = json['UsuarioFoto']?.toString();
    AlumnoApellidoPaterno = json['AlumnoApellidoPaterno']?.toString();
    AlumnoApellidoMaterno = json['AlumnoApellidoMaterno']?.toString();
    AlumnoNombres = json['AlumnoNombres']?.toString();
    AlumnoFechaNacimiento = json['AlumnoFechaNacimiento']?.toString();
    AlumnoEstadoCivil = json['AlumnoEstadoCivil']?.toString();
    AlumnoSexo = json['AlumnoSexo']?.toString();
    AlumnoLugarDeNacimiento = json['AlumnoLugarDeNacimiento']?.toString();
    AlumnoEdad = json['AlumnoEdad']?.toString();
    AlumnoEscuelaDeTransferencia =
        json['AlumnoEscuelaDeTransferencia']?.toString();
    AlumnoTipoDeSangre = json['AlumnoTipoDeSangre']?.toString();
    AlumnoTelefono = json['AlumnoTelefono']?.toString();
    AlumnoCelular = json['AlumnoCelular']?.toString();
    AlumnoTelefonoDeEmergencia = json['AlumnoTelefonoDeEmergencia']?.toString();
    AlumnoDomicilio = json['AlumnoDomicilio']?.toString();
    AlumnoCodiPostal = json['AlumnoCodiPostal']?.toString();
    AlumnoPais = json['AlumnoPais']?.toString();
    AlumnoEstado = json['AlumnoEstado']?.toString();
    AlumnoMunicipio = json['AlumnoMunicipio']?.toString();
    AlumnoRfc = json['AlumnoRfc']?.toString();
    AlumnoCurp = json['AlumnoCurp']?.toString();
    AlumnoMensualidad = json['AlumnoMensualidad']?.toString();
    AlumnoCodigo = json['AlumnoCodigo']?.toString();
    AlumnoPresencial = json['AlumnoPresencial'];
    AlumnoLinea = json['AlumnoLinea'];
    AlumnoVendedor = json['AlumnoVendedor']?.toString();
    AlumnoPagoStripe = json['AlumnoPagoStripe']?.toString();
    AlumnoEgresado = json['AlumnoEgresado'];
    AlumnoPromedio = json['AlumnoPromedio']?.toString();
    AlumnoStatus = json['AlumnoStatus']?.toString();
    alumnoEstatusEstudio = json['alumnoEstatusEstudio']?.toString();
    fechaMarcar = json['fechaMarcar']?.toString();
    calificacion = json['calificacion']?.toString();
    comentarios = json['comentarios']?.toString();
    tokenpush = json['tokenpush']?.toString();
    sucursal = json['sucursal']?.toString();
    practica = json['practica']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['email'] = email;
    data['provider'] = provider;
    data['confirmed'] = confirmed;
    data['blocked'] = blocked;
    data['role'] = role;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['UsuarioFoto'] = UsuarioFoto;
    data['AlumnoApellidoPaterno'] = AlumnoApellidoPaterno;
    data['AlumnoApellidoMaterno'] = AlumnoApellidoMaterno;
    data['AlumnoNombres'] = AlumnoNombres;
    data['AlumnoFechaNacimiento'] = AlumnoFechaNacimiento;
    data['AlumnoEstadoCivil'] = AlumnoEstadoCivil;
    data['AlumnoSexo'] = AlumnoSexo;
    data['AlumnoLugarDeNacimiento'] = AlumnoLugarDeNacimiento;
    data['AlumnoEdad'] = AlumnoEdad;
    data['AlumnoEscuelaDeTransferencia'] = AlumnoEscuelaDeTransferencia;
    data['AlumnoTipoDeSangre'] = AlumnoTipoDeSangre;
    data['AlumnoTelefono'] = AlumnoTelefono;
    data['AlumnoCelular'] = AlumnoCelular;
    data['AlumnoTelefonoDeEmergencia'] = AlumnoTelefonoDeEmergencia;
    data['AlumnoDomicilio'] = AlumnoDomicilio;
    data['AlumnoCodiPostal'] = AlumnoCodiPostal;
    data['AlumnoPais'] = AlumnoPais;
    data['AlumnoEstado'] = AlumnoEstado;
    data['AlumnoMunicipio'] = AlumnoMunicipio;
    data['AlumnoRfc'] = AlumnoRfc;
    data['AlumnoCurp'] = AlumnoCurp;
    data['AlumnoMensualidad'] = AlumnoMensualidad;
    data['AlumnoCodigo'] = AlumnoCodigo;
    data['AlumnoPresencial'] = AlumnoPresencial;
    data['AlumnoLinea'] = AlumnoLinea;
    data['AlumnoVendedor'] = AlumnoVendedor;
    data['AlumnoPagoStripe'] = AlumnoPagoStripe;
    data['AlumnoEgresado'] = AlumnoEgresado;
    data['AlumnoPromedio'] = AlumnoPromedio;
    data['AlumnoStatus'] = AlumnoStatus;
    data['alumnoEstatusEstudio'] = alumnoEstatusEstudio;
    data['fechaMarcar'] = fechaMarcar;
    data['calificacion'] = calificacion;
    data['comentarios'] = comentarios;
    data['tokenpush'] = tokenpush;
    data['sucursal'] = sucursal;
    data['practica'] = practica;
    return data;
  }
}

class PracticaModelDetallepracticas {
/*
{
  "id": 1,
  "practica": 1,
  "alumno": 14,
  "isAcreditada": true,
  "published_at": "2022-06-21T14:40:46.000Z",
  "created_at": "2022-06-21T14:40:46.000Z",
  "updated_at": "2022-06-21T14:50:45.000Z"
} 
*/

  int? id;
  int? practica;
  int? alumno;
  bool? isAcreditada;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;

  PracticaModelDetallepracticas({
    this.id,
    this.practica,
    this.alumno,
    this.isAcreditada,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
  });
  PracticaModelDetallepracticas.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    practica = json['practica']?.toInt();
    alumno = json['alumno']?.toInt();
    isAcreditada = json['isAcreditada'];
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['practica'] = practica;
    data['alumno'] = alumno;
    data['isAcreditada'] = isAcreditada;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class PracticaModelCurso {
/*
{
  "id": 3,
  "CursoTitulo": "Carrera de Cosmetologia Facial Noviembre 2021 Julio 2022",
  "CursoActivo": true,
  "published_at": "2021-11-08T17:40:26.000Z",
  "created_at": "2021-11-08T17:40:23.000Z",
  "updated_at": "2022-01-05T14:40:22.000Z",
  "CursoPrecio": 1700,
  "CursoCierre": "2021-11-01",
  "CursoInscripcion": null
} 
*/

  int? id;
  String? CursoTitulo;
  bool? CursoActivo;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? CursoPrecio;
  String? CursoCierre;
  String? CursoInscripcion;

  PracticaModelCurso({
    this.id,
    this.CursoTitulo,
    this.CursoActivo,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.CursoPrecio,
    this.CursoCierre,
    this.CursoInscripcion,
  });
  PracticaModelCurso.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    CursoTitulo = json['CursoTitulo']?.toString();
    CursoActivo = json['CursoActivo'];
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    CursoPrecio = json['CursoPrecio']?.toInt();
    CursoCierre = json['CursoCierre']?.toString();
    CursoInscripcion = json['CursoInscripcion']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['CursoTitulo'] = CursoTitulo;
    data['CursoActivo'] = CursoActivo;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['CursoPrecio'] = CursoPrecio;
    data['CursoCierre'] = CursoCierre;
    data['CursoInscripcion'] = CursoInscripcion;
    return data;
  }
}

class PracticaModelClase {
/*
{
  "id": 114,
  "ClaseTitulo": "Catiodermia",
  "ClaseVideo": "https://cosbiomeescuela.s3.us-east-2.amazonaws.com/Carrera+de+Cosmetologia+Facial+Noviembre+2021+Julio+2022/2022-06-20+09-35-30.mp4",
  "ClaseActiva": true,
  "ClaseCurso": 3,
  "published_at": "2022-06-20T17:13:23.000Z",
  "created_at": "2022-06-20T17:13:21.000Z",
  "updated_at": "2022-06-20T17:13:24.000Z",
  "Clasemaestro": 94
} 
*/

  int? id;
  String? ClaseTitulo;
  String? ClaseVideo;
  bool? ClaseActiva;
  int? ClaseCurso;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? Clasemaestro;

  PracticaModelClase({
    this.id,
    this.ClaseTitulo,
    this.ClaseVideo,
    this.ClaseActiva,
    this.ClaseCurso,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.Clasemaestro,
  });
  PracticaModelClase.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    ClaseTitulo = json['ClaseTitulo']?.toString();
    ClaseVideo = json['ClaseVideo']?.toString();
    ClaseActiva = json['ClaseActiva'];
    ClaseCurso = json['ClaseCurso']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    Clasemaestro = json['Clasemaestro']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['ClaseTitulo'] = ClaseTitulo;
    data['ClaseVideo'] = ClaseVideo;
    data['ClaseActiva'] = ClaseActiva;
    data['ClaseCurso'] = ClaseCurso;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['Clasemaestro'] = Clasemaestro;
    return data;
  }
}

class PracticaModel {
/*
{
  "id": 1,
  "clase": {
    "id": 114,
    "ClaseTitulo": "Catiodermia",
    "ClaseVideo": "https://cosbiomeescuela.s3.us-east-2.amazonaws.com/Carrera+de+Cosmetologia+Facial+Noviembre+2021+Julio+2022/2022-06-20+09-35-30.mp4",
    "ClaseActiva": true,
    "ClaseCurso": 3,
    "published_at": "2022-06-20T17:13:23.000Z",
    "created_at": "2022-06-20T17:13:21.000Z",
    "updated_at": "2022-06-20T17:13:24.000Z",
    "Clasemaestro": 94
  },
  "costo": 100,
  "fecha": "2022-06-27T00:00:00.000Z",
  "published_at": "2022-06-21T14:32:53.000Z",
  "created_at": "2022-06-21T14:32:53.000Z",
  "updated_at": "2022-06-21T14:50:45.000Z",
  "curso": {
    "id": 3,
    "CursoTitulo": "Carrera de Cosmetologia Facial Noviembre 2021 Julio 2022",
    "CursoActivo": true,
    "published_at": "2021-11-08T17:40:26.000Z",
    "created_at": "2021-11-08T17:40:23.000Z",
    "updated_at": "2022-01-05T14:40:22.000Z",
    "CursoPrecio": 1700,
    "CursoCierre": "2021-11-01",
    "CursoInscripcion": null
  },
  "detallepracticas": [
    {
      "id": 1,
      "practica": 1,
      "alumno": 14,
      "isAcreditada": true,
      "published_at": "2022-06-21T14:40:46.000Z",
      "created_at": "2022-06-21T14:40:46.000Z",
      "updated_at": "2022-06-21T14:50:45.000Z"
    }
  ],
  "alumnos": [
    {
      "id": 14,
      "username": "DIAZ HUERTA ELVIA ALEJANDRA",
      "email": "elvia.huerta@cosbiome.com",
      "provider": "local",
      "confirmed": true,
      "blocked": false,
      "role": 3,
      "created_at": "2021-11-08T18:02:08.000Z",
      "updated_at": "2022-06-21T14:50:45.000Z",
      "UsuarioFoto": "no",
      "AlumnoApellidoPaterno": "DIAZ",
      "AlumnoApellidoMaterno": "HUERTA",
      "AlumnoNombres": "ELVIA ALEJANDRA",
      "AlumnoFechaNacimiento": "11/04/1988",
      "AlumnoEstadoCivil": "Soltero",
      "AlumnoSexo": "Femenino",
      "AlumnoLugarDeNacimiento": "Guadalajara jalisco",
      "AlumnoEdad": "33",
      "AlumnoEscuelaDeTransferencia": "UNIVERCIDAD",
      "AlumnoTipoDeSangre": "O-",
      "AlumnoTelefono": "3321349158",
      "AlumnoCelular": "3321349158",
      "AlumnoTelefonoDeEmergencia": "3328282452",
      "AlumnoDomicilio": "TUNJA S/N",
      "AlumnoCodiPostal": "45653",
      "AlumnoPais": "MEXICO",
      "AlumnoEstado": "JALISCO",
      "AlumnoMunicipio": "GUADALAJARA JALISCO",
      "AlumnoRfc": "*",
      "AlumnoCurp": "DIHE880411MJCZRL03",
      "AlumnoMensualidad": "2100",
      "AlumnoCodigo": "337009",
      "AlumnoPresencial": true,
      "AlumnoLinea": false,
      "AlumnoVendedor": "Abraham Cisneros",
      "AlumnoPagoStripe": "price_1JLWNBHfPPJjPocOCjCUI8YT",
      "AlumnoEgresado": false,
      "AlumnoPromedio": null,
      "AlumnoStatus": "ACTIVO",
      "alumnoEstatusEstudio": "CARRERA",
      "fechaMarcar": null,
      "calificacion": "PAGADO",
      "comentarios": null,
      "tokenpush": null,
      "sucursal": null,
      "practica": 1
    }
  ]
} 
*/

  int? id;
  PracticaModelClase? clase;
  int? costo;
  String? fecha;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  PracticaModelCurso? curso;
  List<PracticaModelDetallepracticas?>? detallepracticas;
  List<PracticaModelAlumnos?>? alumnos;

  PracticaModel({
    this.id,
    this.clase,
    this.costo,
    this.fecha,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.curso,
    this.detallepracticas,
    this.alumnos,
  });
  PracticaModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    clase = (json['clase'] != null)
        ? PracticaModelClase.fromJson(json['clase'])
        : null;
    costo = json['costo']?.toInt();
    fecha = json['fecha']?.toString();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    curso = (json['curso'] != null)
        ? PracticaModelCurso.fromJson(json['curso'])
        : null;
    if (json['detallepracticas'] != null) {
      final v = json['detallepracticas'];
      final arr0 = <PracticaModelDetallepracticas>[];
      v.forEach((v) {
        arr0.add(PracticaModelDetallepracticas.fromJson(v));
      });
      detallepracticas = arr0;
    }
    if (json['alumnos'] != null) {
      final v = json['alumnos'];
      final arr0 = <PracticaModelAlumnos>[];
      v.forEach((v) {
        arr0.add(PracticaModelAlumnos.fromJson(v));
      });
      alumnos = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (clase != null) {
      data['clase'] = clase!.toJson();
    }
    data['costo'] = costo;
    data['fecha'] = fecha;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    if (curso != null) {
      data['curso'] = curso!.toJson();
    }
    if (detallepracticas != null) {
      final v = detallepracticas;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['detallepracticas'] = arr0;
    }
    if (alumnos != null) {
      final v = alumnos;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['alumnos'] = arr0;
    }
    return data;
  }
}
